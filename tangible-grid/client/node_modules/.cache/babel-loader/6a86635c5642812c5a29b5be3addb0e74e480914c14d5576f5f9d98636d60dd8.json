{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\m17wo\\\\Documents\\\\Research\\\\TangibleSite\\\\tangible-grid\\\\client\\\\src\\\\Textbox.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport Quill from 'quill';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Textbox = ({\n  data,\n  isActive,\n  setActiveTextboxId\n}) => {\n  _s();\n  const editorRef = useRef(null);\n  useEffect(() => {\n    if (editorRef.current && isActive) {\n      new Quill(editorRef.current, {\n        theme: 'snow'\n        // Define your toolbar options here\n      });\n      // Consider setting up your toolbar here or manage its visibility\n    }\n  }, [isActive]);\n\n  // Convert the percentage-based dimensions and positions to actual values if necessary\n  const style = {\n    position: 'absolute',\n    left: `${data.x}%`,\n    top: `${data.y}%`,\n    width: `${data.w}%`,\n    height: `${data.h}%`,\n    border: '1px solid black',\n    padding: '10px'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: editorRef,\n    style: style,\n    onClick: () => setActiveTextboxId(data.ID)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 12\n  }, this);\n};\n_s(Textbox, \"FXGU5sRik9TpAO5B+Yli91RwFDk=\");\n_c = Textbox;\nexport default Textbox;\nvar _c;\n$RefreshReg$(_c, \"Textbox\");","map":{"version":3,"names":["React","useEffect","useRef","Quill","jsxDEV","_jsxDEV","Textbox","data","isActive","setActiveTextboxId","_s","editorRef","current","theme","style","position","left","x","top","y","width","w","height","h","border","padding","ref","onClick","ID","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/m17wo/Documents/Research/TangibleSite/tangible-grid/client/src/Textbox.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport Quill from 'quill';\r\nimport { ArduinoData } from './types';\r\n\r\ninterface TextboxProps {\r\n    data: ArduinoData; // Assuming ArduinoData is properly defined/imported\r\n    isActive: boolean;\r\n    setActiveTextboxId: (id: string | null) => void;\r\n}\r\n\r\nconst Textbox: React.FC<TextboxProps> = ({ data, isActive, setActiveTextboxId }) => {\r\n    const editorRef = useRef<HTMLDivElement>(null);\r\n\r\n    useEffect(() => {\r\n        if (editorRef.current && isActive) {\r\n            new Quill(editorRef.current, {\r\n                theme: 'snow',\r\n                // Define your toolbar options here\r\n            });\r\n            // Consider setting up your toolbar here or manage its visibility\r\n        }\r\n    }, [isActive]);\r\n\r\n    // Convert the percentage-based dimensions and positions to actual values if necessary\r\n    const style = {\r\n        position: 'absolute' as const,\r\n        left: `${data.x}%`,\r\n        top: `${data.y}%`,\r\n        width: `${data.w}%`,\r\n        height: `${data.h}%`,\r\n        border: '1px solid black',\r\n        padding: '10px',\r\n    };\r\n\r\n    return <div ref={editorRef} style={style} onClick={() => setActiveTextboxId(data.ID)}></div>;\r\n};\r\n\r\nexport default Textbox;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAS1B,MAAMC,OAA+B,GAAGA,CAAC;EAAEC,IAAI;EAAEC,QAAQ;EAAEC;AAAmB,CAAC,KAAK;EAAAC,EAAA;EAChF,MAAMC,SAAS,GAAGT,MAAM,CAAiB,IAAI,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACZ,IAAIU,SAAS,CAACC,OAAO,IAAIJ,QAAQ,EAAE;MAC/B,IAAIL,KAAK,CAACQ,SAAS,CAACC,OAAO,EAAE;QACzBC,KAAK,EAAE;QACP;MACJ,CAAC,CAAC;MACF;IACJ;EACJ,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAMM,KAAK,GAAG;IACVC,QAAQ,EAAE,UAAmB;IAC7BC,IAAI,EAAG,GAAET,IAAI,CAACU,CAAE,GAAE;IAClBC,GAAG,EAAG,GAAEX,IAAI,CAACY,CAAE,GAAE;IACjBC,KAAK,EAAG,GAAEb,IAAI,CAACc,CAAE,GAAE;IACnBC,MAAM,EAAG,GAAEf,IAAI,CAACgB,CAAE,GAAE;IACpBC,MAAM,EAAE,iBAAiB;IACzBC,OAAO,EAAE;EACb,CAAC;EAED,oBAAOpB,OAAA;IAAKqB,GAAG,EAAEf,SAAU;IAACG,KAAK,EAAEA,KAAM;IAACa,OAAO,EAAEA,CAAA,KAAMlB,kBAAkB,CAACF,IAAI,CAACqB,EAAE;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAChG,CAAC;AAACtB,EAAA,CAzBIJ,OAA+B;AAAA2B,EAAA,GAA/B3B,OAA+B;AA2BrC,eAAeA,OAAO;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}