{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\m17wo\\\\Documents\\\\Research\\\\TangibleSite\\\\tangible-grid\\\\client\\\\src\\\\Textbox.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Textbox = ({\n  data,\n  isActive,\n  setActiveTextboxId,\n  containerDimensions\n}) => {\n  _s();\n  const editorRef = useRef(null);\n\n  // Handle click to set active textbox ID\n  const handleClick = () => setActiveTextboxId(data.ID);\n\n  // Style adjustments based on passed dimensions\n  const style = {\n    position: 'absolute',\n    left: `${data.y / 12 * containerDimensions.width}px`,\n    top: `${data.x / 16 * containerDimensions.height}px`,\n    width: `${data.w / 12 * containerDimensions.width}px`,\n    height: `${data.h / 16 * containerDimensions.height}px`,\n    border: '1px solid black',\n    padding: '10px',\n    cursor: 'text'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: editorRef,\n    style: style,\n    onClick: handleClick,\n    contentEditable: isActive // Only make it editable if it's the active textbox\n    ,\n    suppressContentEditableWarning: true // Suppress warning about lacking onChange handler\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(Textbox, \"U23Mj2fZUVBkuOSyNtK9IkK2H0s=\");\n_c = Textbox;\nexport default Textbox;\nvar _c;\n$RefreshReg$(_c, \"Textbox\");","map":{"version":3,"names":["React","useRef","jsxDEV","_jsxDEV","Textbox","data","isActive","setActiveTextboxId","containerDimensions","_s","editorRef","handleClick","ID","style","position","left","y","width","top","x","height","w","h","border","padding","cursor","ref","onClick","contentEditable","suppressContentEditableWarning","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/m17wo/Documents/Research/TangibleSite/tangible-grid/client/src/Textbox.tsx"],"sourcesContent":["import React, { useRef } from 'react';\r\n\r\nconst Textbox = ({ data, isActive, setActiveTextboxId, containerDimensions }) => {\r\n    const editorRef = useRef<HTMLDivElement>(null);\r\n\r\n    // Handle click to set active textbox ID\r\n    const handleClick = () => setActiveTextboxId(data.ID);\r\n\r\n    // Style adjustments based on passed dimensions\r\n    const style: React.CSSProperties = {\r\n        position: 'absolute',\r\n        left: `${(data.y / 12) * containerDimensions.width}px`,\r\n        top: `${(data.x / 16) * containerDimensions.height}px`,\r\n        width: `${(data.w / 12) * containerDimensions.width}px`,\r\n        height: `${(data.h / 16) * containerDimensions.height}px`,\r\n        border: '1px solid black',\r\n        padding: '10px',\r\n        cursor: 'text',\r\n    };\r\n\r\n    return (\r\n        <div \r\n            ref={editorRef} \r\n            style={style} \r\n            onClick={handleClick}\r\n            contentEditable={isActive} // Only make it editable if it's the active textbox\r\n            suppressContentEditableWarning={true} // Suppress warning about lacking onChange handler\r\n        >\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Textbox;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,OAAO,GAAGA,CAAC;EAAEC,IAAI;EAAEC,QAAQ;EAAEC,kBAAkB;EAAEC;AAAoB,CAAC,KAAK;EAAAC,EAAA;EAC7E,MAAMC,SAAS,GAAGT,MAAM,CAAiB,IAAI,CAAC;;EAE9C;EACA,MAAMU,WAAW,GAAGA,CAAA,KAAMJ,kBAAkB,CAACF,IAAI,CAACO,EAAE,CAAC;;EAErD;EACA,MAAMC,KAA0B,GAAG;IAC/BC,QAAQ,EAAE,UAAU;IACpBC,IAAI,EAAG,GAAGV,IAAI,CAACW,CAAC,GAAG,EAAE,GAAIR,mBAAmB,CAACS,KAAM,IAAG;IACtDC,GAAG,EAAG,GAAGb,IAAI,CAACc,CAAC,GAAG,EAAE,GAAIX,mBAAmB,CAACY,MAAO,IAAG;IACtDH,KAAK,EAAG,GAAGZ,IAAI,CAACgB,CAAC,GAAG,EAAE,GAAIb,mBAAmB,CAACS,KAAM,IAAG;IACvDG,MAAM,EAAG,GAAGf,IAAI,CAACiB,CAAC,GAAG,EAAE,GAAId,mBAAmB,CAACY,MAAO,IAAG;IACzDG,MAAM,EAAE,iBAAiB;IACzBC,OAAO,EAAE,MAAM;IACfC,MAAM,EAAE;EACZ,CAAC;EAED,oBACItB,OAAA;IACIuB,GAAG,EAAEhB,SAAU;IACfG,KAAK,EAAEA,KAAM;IACbc,OAAO,EAAEhB,WAAY;IACrBiB,eAAe,EAAEtB,QAAS,CAAC;IAAA;IAC3BuB,8BAA8B,EAAE,IAAK,CAAC;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAErC,CAAC;AAEd,CAAC;AAACxB,EAAA,CA5BIL,OAAO;AAAA8B,EAAA,GAAP9B,OAAO;AA8Bb,eAAeA,OAAO;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}