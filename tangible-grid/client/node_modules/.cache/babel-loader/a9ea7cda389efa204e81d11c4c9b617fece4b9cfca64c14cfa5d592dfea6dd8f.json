{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\m17wo\\\\Documents\\\\Research\\\\TangibleSite\\\\tangible-grid\\\\client\\\\src\\\\Toolbar.tsx\";\nimport React from 'react';\nimport './Toolbar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Toolbar = ({\n  activeTextboxId\n}) => {\n  const formatText = (command, value = undefined) => {\n    document.execCommand(command, false, value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"toolbar\",\n    className: \"toolbar\",\n    style: {\n      marginBottom: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => formatText('bold'),\n      className: \"toolbar-button\",\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Bold\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 83\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => formatText('italic'),\n      className: \"toolbar-button\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        children: \"Italic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 85\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: buttonStyle,\n      onClick: () => formatText('underline'),\n      children: /*#__PURE__*/_jsxDEV(\"u\", {\n        children: \"Underline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 81\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: buttonStyle,\n      onClick: () => formatText('strikeThrough'),\n      children: /*#__PURE__*/_jsxDEV(\"s\", {\n        children: \"Strike\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 85\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: buttonStyle,\n      onClick: () => formatText('justifyLeft'),\n      children: \"Left\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: buttonStyle,\n      onClick: () => formatText('justifyCenter'),\n      children: \"Center\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: buttonStyle,\n      onClick: () => formatText('justifyRight'),\n      children: \"Right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: buttonStyle,\n      onClick: () => formatText('insertOrderedList'),\n      children: \"OL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: buttonStyle,\n      onClick: () => formatText('insertUnorderedList'),\n      children: \"UL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n_c = Toolbar;\nexport default Toolbar;\nvar _c;\n$RefreshReg$(_c, \"Toolbar\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Toolbar","activeTextboxId","formatText","command","value","undefined","document","execCommand","id","className","style","marginBottom","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","buttonStyle","_c","$RefreshReg$"],"sources":["C:/Users/m17wo/Documents/Research/TangibleSite/tangible-grid/client/src/Toolbar.tsx"],"sourcesContent":["import React from 'react';\r\nimport './Toolbar.css';\r\n\r\nconst Toolbar = ({ activeTextboxId }) => {\r\n    const formatText = (command, value: string | undefined = undefined) => {\r\n        document.execCommand(command, false, value);\r\n    };\r\n\r\n    return (\r\n        <div id=\"toolbar\" className=\"toolbar\" style={{ marginBottom: '20px' }}>\r\n            <button onClick={() => formatText('bold')} className=\"toolbar-button\"><b>Bold</b></button>\r\n            <button onClick={() => formatText('italic')} className=\"toolbar-button\"><i>Italic</i></button>\r\n            <button style={buttonStyle} onClick={() => formatText('underline')}><u>Underline</u></button>\r\n            <button style={buttonStyle} onClick={() => formatText('strikeThrough')}><s>Strike</s></button>\r\n            <button style={buttonStyle} onClick={() => formatText('justifyLeft')}>Left</button>\r\n            <button style={buttonStyle} onClick={() => formatText('justifyCenter')}>Center</button>\r\n            <button style={buttonStyle} onClick={() => formatText('justifyRight')}>Right</button>\r\n            <button style={buttonStyle} onClick={() => formatText('insertOrderedList')}>OL</button>\r\n            <button style={buttonStyle} onClick={() => formatText('insertUnorderedList')}>UL</button>\r\n            {/* Add more buttons as needed */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Toolbar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}