{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\m17wo\\\\Documents\\\\Research\\\\TangibleSite\\\\tangible-grid\\\\client\\\\src\\\\Toolbar.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Toolbar = ({\n  activeTextboxId\n}) => {\n  const formatText = (command, value = null) => {\n    document.execCommand(command, false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"toolbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => formatText('bold'),\n      children: \"Bold\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => formatText('italic'),\n      children: \"Italic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => formatText('underline'),\n      children: \"Underline\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n_c = Toolbar;\nexport default Toolbar;\nvar _c;\n$RefreshReg$(_c, \"Toolbar\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Toolbar","activeTextboxId","formatText","command","value","document","execCommand","id","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/m17wo/Documents/Research/TangibleSite/tangible-grid/client/src/Toolbar.tsx"],"sourcesContent":["import React from 'react';\r\n\r\nconst Toolbar = ({ activeTextboxId }) => {\r\n\r\n    const formatText = (command, value = null) => {\r\n        document.execCommand(command, false);\r\n    };\r\n\r\n    return (\r\n        <div id=\"toolbar\">\r\n            <button onClick={() => formatText('bold')}>Bold</button>\r\n            <button onClick={() => formatText('italic')}>Italic</button>\r\n            <button onClick={() => formatText('underline')}>Underline</button>\r\n            {/* Add more formatting buttons as needed */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Toolbar;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAgB,CAAC,KAAK;EAErC,MAAMC,UAAU,GAAGA,CAACC,OAAO,EAAEC,KAAK,GAAG,IAAI,KAAK;IAC1CC,QAAQ,CAACC,WAAW,CAACH,OAAO,EAAE,KAAK,CAAC;EACxC,CAAC;EAED,oBACIJ,OAAA;IAAKQ,EAAE,EAAC,SAAS;IAAAC,QAAA,gBACbT,OAAA;MAAQU,OAAO,EAAEA,CAAA,KAAMP,UAAU,CAAC,MAAM,CAAE;MAAAM,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACxDd,OAAA;MAAQU,OAAO,EAAEA,CAAA,KAAMP,UAAU,CAAC,QAAQ,CAAE;MAAAM,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC5Dd,OAAA;MAAQU,OAAO,EAAEA,CAAA,KAAMP,UAAU,CAAC,WAAW,CAAE;MAAAM,QAAA,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEjE,CAAC;AAEd,CAAC;AAACC,EAAA,GAdId,OAAO;AAgBb,eAAeA,OAAO;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}