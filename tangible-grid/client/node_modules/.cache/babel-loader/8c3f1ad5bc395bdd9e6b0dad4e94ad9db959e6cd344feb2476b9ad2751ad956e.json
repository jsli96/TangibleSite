{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\m17wo\\\\Documents\\\\Research\\\\TangibleSite\\\\tangible-grid\\\\client\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Textbox from \"./Textbox\";\nimport Toolbar from \"./Toolbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [arduinoDataArray, setArduinoDataArray] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`http://localhost:3001/api/data`);\n        const {\n          data\n        } = await response.json();\n        if (data && data.length > 0) {\n          const newData = data.map(d => JSON.parse(d)).map(parsed => ({\n            ...parsed,\n            x: Number(parsed.x),\n            y: Number(parsed.y),\n            h: Number(parsed.h),\n            w: Number(parsed.w)\n          }));\n          setArduinoDataArray(prevData => {\n            // Logic to add or remove textboxes based on type\n            return newData.reduce((acc, currData) => {\n              if (currData.type === \"add\") {\n                acc.push(currData); // Add new textbox data\n              } else if (currData.type === \"delete\") {\n                return acc.filter(item => item.ID !== currData.ID); // Remove textbox data\n              }\n              return acc;\n            }, [...prevData]);\n          });\n        }\n      } catch (error) {\n        console.error(\"Fetching data failed\", error);\n      }\n    };\n    const intervalId = setInterval(fetchData, 2000);\n    return () => clearInterval(intervalId);\n  }, []);\n  const renderTextboxWithToolbar = data => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n        onBoldClick: () => console.log(\"Bold clicked\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Textbox, {\n        data: data\n      }, data.ID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"container\",\n      children: arduinoDataArray.map(data => data.type === 'add' ? renderTextboxWithToolbar(data) : null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"+2tBB0tgEAUZ8yNIZRaB2KuL2ko=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Textbox","Toolbar","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","arduinoDataArray","setArduinoDataArray","fetchData","response","fetch","data","json","length","newData","map","d","JSON","parse","parsed","x","Number","y","h","w","prevData","reduce","acc","currData","type","push","filter","item","ID","error","console","intervalId","setInterval","clearInterval","renderTextboxWithToolbar","children","onBoldClick","log","fileName","_jsxFileName","lineNumber","columnNumber","className","id","_c","$RefreshReg$"],"sources":["C:/Users/m17wo/Documents/Research/TangibleSite/tangible-grid/client/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Textbox from \"./Textbox\";\nimport Toolbar from \"./Toolbar\";\nimport { ArduinoData } from './types';\n\nfunction App() {\n    const [arduinoDataArray, setArduinoDataArray] = useState<ArduinoData[]>([]);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response = await fetch(`http://localhost:3001/api/data`);\n                const { data } = await response.json();\n                if (data && data.length > 0) {\n                    const newData = data.map((d) => JSON.parse(d)).map(parsed => ({\n                        ...parsed,\n                        x: Number(parsed.x),\n                        y: Number(parsed.y),\n                        h: Number(parsed.h),\n                        w: Number(parsed.w),\n                    }));\n                    setArduinoDataArray(prevData => {\n                        // Logic to add or remove textboxes based on type\n                        return newData.reduce((acc, currData) => {\n                            if (currData.type === \"add\") {\n                                acc.push(currData); // Add new textbox data\n                            } else if (currData.type === \"delete\") {\n                                return acc.filter(item => item.ID !== currData.ID); // Remove textbox data\n                            }\n                            return acc;\n                        }, [...prevData]);\n                    });\n                }\n            } catch (error) {\n                console.error(\"Fetching data failed\", error);\n            }\n        };\n\n        const intervalId = setInterval(fetchData, 2000);\n        return () => clearInterval(intervalId);\n    }, []);\n\n    const renderTextboxWithToolbar = (data: ArduinoData) => {\n        return (\n            <>\n                <Toolbar onBoldClick={() => console.log(\"Bold clicked\")} />\n                <Textbox key={data.ID} data={data} />\n            </>\n        );\n    };\n\n    return (\n        <div className=\"App\">\n            <div id=\"container\">\n                {arduinoDataArray.map((data) => (\n                    data.type === 'add' ? renderTextboxWithToolbar(data) : null\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}